# This workflow will build and push a new container image to Amazon ECR,
# and then will deploy a new task definition to Amazon ECS, when there is a push to the "main" branch.
#
# To use this workflow, you will need to complete the following set-up steps:
#
# 1. Create an ECR repository to store your images.
#    For example: `aws ecr create-repository --repository-name my-ecr-repo --region us-east-2`.
#    Replace the value of the `ECR_REPOSITORY` environment variable in the workflow below with your repository's name.
#    Replace the value of the `AWS_REGION` environment variable in the workflow below with your repository's region.
#

name: Deploy to Amazon ECR

on:
  push:
    branches: [ "feature/*" ]

env:
  CONTAINER_NAME: ui-cabinet           # set this to the name of the container in the

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set current date as env variable
      run: echo "NOW=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}-${{env.NOW}}
      run: |
        docker build -t $ECR_REGISTRY/${{ secrets.ECR_REPOSITORY}}:$IMAGE_TAG .
        docker push $ECR_REGISTRY/${{ secrets.ECR_REPOSITORY}}:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/${{ secrets.ECR_REPOSITORY}}:$IMAGE_TAG" >> $GITHUB_OUTPUT
    - name: Output image name
      run: |
        echo "Pushed image: ${{ steps.build-image.outputs.image }}"
